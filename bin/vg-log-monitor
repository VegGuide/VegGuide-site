#!/usr/bin/perl

use strict;
use warnings;

use DateTime;
use DateTime::Format::HTTP;
use DateTime::TimeZone;
use Email::MessageID;
use Email::Send;
use Email::Simple;
use Email::Simple::Creator;
use File::Tail;
use VegGuide::Config;
use VegGuide::JSON;

use Getopt::Long;

my $debug;
GetOptions( 'debug' => \$debug );

my $file = '/var/log/vegguide/error.log';

my $interval = 5 * 60;
my $sleep    = ($debug ? 1 : 60);

my $hostname  = VegGuide::Config->Hostname();
my $from      = 'log-monitor@' . $hostname;
my $sender    = Email::Send->new( { mailer => 'Sendmail' } );
my $last_sent = 0;
my @messages;

my $local_tz = DateTime::TimeZone->new( name => 'local' );

my $tail = _make_tail();

my $record = q{};
while ( defined( my $line = $tail->read() ) ) {
    if ( length $line ) {
        $record .= $line;
        if ( $line =~ /^}/ ) {
            warn $record if $debug;
            eval { process_record($record) };
            warn $@ if $@;
            $record = q{};
        }
    }

    {
        local $@;
        eval { send_if_pending(); };
        warn $@ if $@;
    }

    sleep $sleep;
}

sub process_record {
    my $record = shift;

    my $error = VegGuide::JSON->Decode($record);

    my $text = 'URI: ' . $error->{uri};
    if ( $error->{user} ) {
        $text .= "\n";
        $text .= 'User: ' . $error->{user};
    }

    if ( $error->{referer} ) {
        $text .= "\n";
        $text .= "Referer: $error->{referer}";
    }

    if ( $error->{user_agent} ) {
        $text .= "\n";
        $text .= "User-Agent: $error->{user_agent}";
    }

    $text .= "\n";
    $text .= $error->{error};

    $text =~ s/^\s*/    /gm;

    my $dt = DateTime->from_epoch(
        epoch     => $error->{epoch},
        time_zone => 'America/Denver',
    );

    push @messages, { date => $dt, text => $text };

    return 1;
}

sub send_if_pending {
    return unless @messages;

    warn 'We have ' . ( scalar @messages ) . " to send\n" if $debug;

    my $now = time;

    my $elapsed = $now - $last_sent;

    return if $elapsed < $interval;

    warn "Sending messages - $elapsed seconds since last sent\n";

    my $body = '';

    for my $msg (@messages) {
        $body .= "\n\n" if $body;

        $body .= $msg->{date}->strftime('%Y-%m-%d %H:%M:%S');
        $body .= "\n";
        $body .= $msg->{text};
    }

    my $email = Email::Simple->create(
        header => [
            From         => $from,
            To           => 'autarch@urth.org',
            Subject      => "VegGuide ($hostname) log errors",
            'Message-ID' => Email::MessageID->new(),
        ],
        body => $body,
    );

    $sender->send($email);

    $last_sent = $now;

    @messages = ();

    return;
}

sub _make_tail {
    return File::Tail->new(
        name        => $file,
        maxinterval => $sleep,
        resetafter  => 3600 * 8,
        nowait      => 1,
    );
}
